#!/usr/local/bin/nush
#
# @file stickupd
# The stickup daemon.
#
# @copyright  Copyright (c) 2010 Neon Design Technology, Inc.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

(load "Nunja")

(set exit (NuBridgedFunction functionWithName:"exit" signature:"vi"))

;;;;;;;;;;;;;;;;;;;;;;;;;
;; main program
;;;;;;;;;;;;;;;;;;;;;;;;;

(set argv ((NSProcessInfo processInfo) arguments))
(set argi 0)

((((NSProcessInfo processInfo) processIdentifier) stringValue)
 writeToFile:"stickupd.pid" atomically:NO)

;; if we're running as a nush script, skip the nush path
(if (/(.*)nush$/ findInString:(argv 0))
    (set argi (+ argi 1)))

;; skip the program name
(set argi (+ argi 1))

;; the option(s) we need to set
(set port 5000)
(set localOnly NO)

;; process the remaining arguments
(while (< argi (argv count))
       (case (argv argi)
             ("-p"        (set argi (+ argi 1)) (set port ((argv argi) intValue)))
             ("--port"    (set argi (+ argi 1)) (set port ((argv argi) intValue)))
             ("-l"        (set localOnly YES))
             ("--local"   (set localOnly YES))
             ("-v"        (Nunja setVerbose:YES))
             ("--verbose" (Nunja setVerbose:YES))
             (else (puts (+ "unknown option: " (argv argi)))
                   (exit -1)))
       (set argi (+ argi 1)))

(set n (Nunja nunja))
(if localOnly
    (then (n bindToAddress:"127.0.0.1" port:port))
    (else (n bindToAddress:"0.0.0.0" port:port)))

(n setDelegate:((NunjaDelegate alloc) initWithSite:"."))
(puts (+ "Stickup is running on port " port))
((n delegate) dump)
(n run)

